{"version":3,"sources":["firebase.js","providers/UserProvider.jsx","components/MapContainer.js","components/ProfilePage.js","components/SignIn.js","components/SignUp.js","components/Emergency.js","components/Notified.js","components/PasswordReset.js","components/Application.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","generateUserDocument","collection","GoogleAuthProvider","user","additionalData","a","userRef","doc","uid","get","exists","email","displayName","photoURL","set","getUserDocument","console","error","userDocument","data","generateUserRequest","request","callback","add","then","docRef","id","catch","UserContext","createContext","UserProvider","state","componentDidMount","onAuthStateChanged","userAuth","setState","this","Provider","value","props","children","Component","locations","name","location","lat","lng","containerStyle","width","height","center","MapContainer","useState","selected","setSelected","useJsApiLoader","googleMapsApiKey","isLoaded","mapContainerStyle","zoom","map","item","position","onClick","onSelect","clickable","onCloseClick","ProfilePage","processRequest","currentRequest","callback2","log","docId","onSnapshot","getUserRequestLocationData","gridStyles","paper","padding","marginTop","marginBottom","useContext","bloodGroup","Grid","container","sm","Paper","style","className","Button","variant","color","margin","Geolocation","getCurrentPosition","coords","latitude","longitude","timestamp","code","message","enableHighAccuracy","timeout","maximumAge","signOut","SignIn","classes","makeStyles","theme","spacing","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","submit","isSignedIn","setEmail","password","setPassword","setError","setErrors","requestMessage","setRequestMessage","onChangeHandler","event","currentTarget","userEmail","emailPattern","test","userPassword","length","Container","component","maxWidth","CssBaseline","Typography","noValidate","TextField","required","fullWidth","label","autoFocus","onChange","type","autoComplete","FormControlLabel","control","Checkbox","preventDefault","signInWithEmailAndPassword","signInWithEmailAndPasswordHandler","body","anonymous","face_signature","victim_id","Date","getTime","fetch","method","headers","JSON","stringify","response","text","xs","Link","href","SignUp","GreenCheckbox","withStyles","root","green","checked","setDisplayName","firstName","setFirstName","lastName","setLastName","contact","setContact","address","setAddress","setBloodGroup","coordinates","setCoordinates","isUser","setUserChecked","isHospital","setHospitalChecked","isBloodBank","setBloodBankChecked","image","setImage","setUrl","progress","setProgress","errors","itemName","quantity","bloodGroupQuan","setbloodGroupQuan","createUserWithEmailAndPasswordHandler","createUserWithEmailAndPassword","userType","userContact","handleSelect","geocodeByAddress","results","getLatLng","latLng","FormGroup","row","paddingLeft","helperText","defaultCountry","FormControl","InputLabel","Select","target","MenuItem","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","description","index","size","inputProps","min","newItems","handleQuantityInput","max","e","files","ref","put","on","snapshot","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","Box","m","pt","justify","useStyles","Emergency","notification","setNotification","direction","minHeight","CircularProgress","gutterBottom","Notified","setLocations","haveData","setHaveData","user_id","request_id","useEffect","json","parseFloat","donar","receiver","acceptRequest","accepted","marginRight","marginLeft","PasswordReset","emailHasBeenSent","setEmailHasBeenSent","action","htmlFor","placeholder","sendPasswordResetEmail","setTimeout","sendResetEmail","to","Application","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad8f477f.chunk.js","sourcesContent":["\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDgZ8UZ0mySA3qTtlj3tJ1OZleyDAsuw84\",\n  authDomain: \"bloodbankasaservice.firebaseapp.com\",\n  projectId: \"bloodbankasaservice\",\n  storageBucket: \"bloodbankasaservice.appspot.com\",\n  messagingSenderId: \"621697739059\",\n  appId: \"1:621697739059:web:8a6c3fe1d11046c74f7646\"\n};\n// const get_base_url= 'https://us-central1-bloodbankasaservice.cloudfunctions.net/get_nearest_service'\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\nexport const requests = firestore.collection(\"/Requests\");\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\nexport const generateUserDocument = async (user,additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`User/${user.uid}`);\n  const snapshot = await userRef.get();\n  \n  if (!snapshot.exists) {\n    const { email, displayName, photoURL } = user;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n      \n    return getUserDocument(user.uid); \n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`User/${uid}`).get();\n    \n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nexport const generateUserRequest = async (request,callback) => {\n  if (!request) return;\n\n  firestore.collection(\"/Requests\").add(request).then( function(docRef) \n  { \n    callback(docRef.id)\n  }).catch(function(error) {\n    console.error(\"Error adding document: \", error);\n  });\n};\n\n\n// export const generateUserRequest = async (request) => {\n//   if (!request) return;\n//   // const db= firestore.collection(\"/Requests\");\n//   // const  reqRef = await db.add(request);\n//   // Add a new document with a generated id.\n//   firestore.collection(\"/Requests\").add(request)\n//   .then(function(docRef) {\n//    // console.log(\"Document written with ID: \", docRef.id);\n//       axios.get(get_base_url+docRef.id).then(response =>{\n//         console.log(response['data'])\n//       }).catch(\n//         error => {console.log(\"Error fetching request data: \", error); \n//       })\n//   })\n//   .catch(function(error) {\n//     console.error(\"Error adding document: \", error);\n//   });\n// };\n\n\nexport const getUserRequestLocationData = ( docId, callback) =>{\n\n  if (!docId) return null;\n  try {\n    console.log(docId)\n    firestore.doc(`NearestServices/${docId}`).onSnapshot( doc =>{\n      if (doc.data()) {\n          callback(doc.data())\n      }\n    });\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n \n};\n\n\n// export const generateUserRequest = async (request,callback) => {\n//   if (!request) return;\n//   const userRef = firestore.doc(`User/${user.uid}`);\n//   const snapshot = await userRef.get();\n  \n//   if (!snapshot.exists) {\n//     const { email, displayName, photoURL } = user;\n//     try {\n//       await userRef.set({\n//         displayName,\n//         email,\n//         photoURL,\n//         ...additionalData\n//       });\n      \n//     return getUserDocument(user.uid); \n//     } catch (error) {\n//       console.error(\"Error creating user document\", error);\n//     }\n//   }\n//   return getUserDocument(user.uid);\n// };\n\n\n// function(docRef) {\n//   const body = {fetchId : docRef.id }\n//   fetch(get_base_url, {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     }\n//     ,body: JSON.stringify(body)\n//       }).then(response =>{\n//         console.log(response.text());\n//       }).then(data =>{\n//         // console.log(data)\n//         console.log(data)\n//       }).catch(error => {\n//         console.log(error)\n//       });\n//     }\n","import React, { Component, createContext } from \"react\";\nimport { auth, generateUserDocument } from \"../firebase\";\n\n\nexport const UserContext = createContext({ user: null });\n\nclass UserProvider extends Component {\n  state = {\n    user: null\n  };\n\n  \n  \n  componentDidMount = async () => {\n    auth.onAuthStateChanged(async userAuth => {\n      const user = await generateUserDocument(userAuth);\n      this.setState({ user });\n    });\n\n\n  };\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <UserContext.Provider value={user}>\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default UserProvider;","import React, {useState}  from 'react';\nimport { GoogleMap, useJsApiLoader, Marker,InfoWindow } from '@react-google-maps/api';\n\nconst locations = [\n    {\n      name: \"Location 1\",\n      location: { \n        lat: 33.409663,\n        lng: -111.897216\n      },\n    },\n    {\n      name: \"Location 2\",\n      location: { \n        lat: 34.409663,\n        lng: -112.897216\n      },\n    },\n    {\n      name: \"Location 3\",\n      location: { \n        lat: 33.439663,\n        lng: -111.998\n      },\n    }\n  ];\n\n\nconst containerStyle = {\n    width: '100%',\n    height: '100%'\n  };\n  \n  const center = {\n    lat: 33.4092,\n    lng: -111.9203\n  };\n\nconst MapContainer = () => {\n\n  const [ selected, setSelected ] = useState({});\n  \n  const onSelect = item => {\n    setSelected(item);\n  }\n  \n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyCSngnFVuMXGnhdO2ZBsN7kYk_o7L9PVys\"\n      })\n\n  return  isLoaded? (\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          zoom={13}\n          center={center}>\n        {\n            locations.map(item => {\n              return (\n              <Marker key={item.name} position={item.location} onClick={() => onSelect(item)} />\n              )\n            })\n         }\n         {\n            selected.location && \n            (\n              <InfoWindow\n              position={selected.location}\n              clickable={true}\n              onCloseClick={() => setSelected({})}>\n              <p>{selected.name}</p>\n            </InfoWindow>\n            )\n         }\n        </GoogleMap> ) : <></>\n}\nexport default MapContainer;","import React, { useContext } from \"react\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { navigate } from \"@reach/router\";\nimport {auth} from \"../firebase\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport Geolocation from 'react-native-geolocation-service';\nimport { generateUserRequest,getUserRequestLocationData } from \"../firebase\";\nimport MapContainer from \"./MapContainer\";\n\nconst ProfilePage = () => {\n\n  function processRequest(currentRequest)\n  {\n       const callback2 = (data) => {\n         console.log(data)\n        };\n       const callback1 = (docId) => {\n        getUserRequestLocationData(docId, callback2);\n       }\n       generateUserRequest(currentRequest, callback1);  \n  }\n\n  const gridStyles =  {paper: {padding: 10, marginTop: 20, marginBottom:20, height:'350%' }}\n\n  const requestBlood = () => {\n    var currentRequest={}\n    Geolocation.getCurrentPosition(\n      (position) => {\n        currentRequest={\"latitude\":position.coords.latitude, \"longitude\":position.coords.longitude,\"timestamp\":position.timestamp}\n        currentRequest['email']=email\n        processRequest(currentRequest)\n      },  \n      (error) => {\n        console.log(error.code, error.message);\n      },\n      {\n         enableHighAccuracy: true,\n         timeout: 10000,\n          maximumAge: 100000\n       }\n    );\n  };\n  const user = useContext(UserContext);\n  const { displayName, email,bloodGroup} = user;\n  console.log(user)\n  \n  return (\n        <Grid container>\n              <Grid item sm={4}>\n                <Paper style={gridStyles.paper}>\n                <div className = \"mx-auto w-11/12 md:w-2/4 py-8 px-4 md:px-8\">\n                    <div className=\"flex border flex-col items-center md:flex-row md:items-start border-blue-400 px-3 py-4\">\n                      {/* <div\n                        style={{\n                          background: `url(${photoURL || 'https://res.cloudinary.com/dqcsk8rsc/image/upload/v1577268053/avatar-1-bitmoji_upgwhc.png'})  no-repeat center center`,\n                          backgroundSize: \"cover\",\n                          height: \"200px\",\n                          width: \"200px\"\n                        }}\n                        className=\"border border-blue-300\"\n                      ></div> */}\n                      <div className = \"md:pl-4\">\n                      <h2 className = \"text-2xl font-semibold\">{displayName}</h2>\n                      <h3 className = \"italic\">{email}</h3>\n                      <h3 className =\"italic\">{bloodGroup}</h3>\n                      </div>\n                    </div>\n                    <div>\n                      <Button variant=\"contained\"color=\"secondary\" style={{margin:10}} onClick={requestBlood} >\n                        Request Blood\n                      </Button>\n                      <Button variant=\"contained\" color=\"primary\" onClick = {() => {auth.signOut()}}>\n                        Sign Out\n                      </Button>\n                    </div>\n                    \n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item sm >\n                <Paper style={gridStyles.paper}>\n                        <MapContainer>\n\n                        </MapContainer>\n                </Paper>\n              </Grid>\n        </Grid>\n   \n  ) \n};\n\nexport default ProfilePage;","import React, {useState} from \"react\";\n//import { Router, Link, Redirect } from \"@reach/router\";\nimport { signInWithGoogle, get_user_by_request } from \"../firebase\";\nimport { auth } from \"../firebase\";\nimport ProfilePage from \"./ProfilePage\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Geolocation from 'react-native-geolocation-service';\n\nconst SignIn = () => {\n\n  const classes = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n    const [isSignedIn,setSignedIn] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [errors, setErrors] = useState(null);\n\n    const [requestMessage, setRequestMessage] = useState('');\n\n    const putBloodRequest = (event)=>{\n\n      Geolocation.getCurrentPosition(\n        (position) => {\n\n          const body = {\n            anonymous: true,\n            face_signature: null,\n            victim_id: null,\n            timestamp: new Date().getTime(),\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          }\n\n          fetch('https://us-central1-bloodbankasaservice.cloudfunctions.net/get_user_by_request',{\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(body)\n          }).then(response =>{\n            return response.text();\n          }).then(data =>{\n            // console.log(data)\n            setRequestMessage(data)\n          }).catch(error => {\n            console.log(error)\n          });\n\n        },  \n        (error) => {\n          console.log(error.code, error.message);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 100000\n        }\n      );\n    }\n\n    const signInWithEmailAndPasswordHandler = (event,email, password) => {\n        \n        event.preventDefault();\n        \n        auth.signInWithEmailAndPassword(email, password)\n        // .then(() => {\n\n        //   setSignedIn(true);\n               \n        //   })\n          .catch(error => {\n        setError(\"Error signing in with password and email!\");\n          console.error(\"Error signing in with password and email\", error);\n        });\n      };\n      \n      \n      const onChangeHandler = (event) => {\n          const {name, value} = event.currentTarget;\n        \n          if(name === 'userEmail') {\n              setErrors({userEmail:\"\"})\n              setEmail(value);\n              const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n              console.log(emailPattern.test(value))\n              if (!emailPattern.test(value)) {\n                setErrors({userEmail:\"Email is not valid\"})\n              }\n          }\n          else if(name === 'userPassword'){\n            setErrors({userPassword:\"\"})\n            setPassword(value);\n            if(value.length<1){\n              setErrors({userPassword:\"password should not be null\"})\n            }\n          }\n      };\n   \n\n  return (\n    isSignedIn? \n    <ProfilePage></ProfilePage>:\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"userEmail\"\n            value = {email}\n            autoFocus\n            // error = {errors.userEmail}  \n            // helperText = {errors.userEmail}\n            onChange = {(event) => onChangeHandler(event)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            name=\"userPassword\"\n            value = {password}\n            // error={errors.userPassword} \n            // helperText={errors.userPassword}\n            onChange = {(event) => onChangeHandler(event)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick = {(event) => {signInWithEmailAndPasswordHandler(event, email, password)}}\n          >\n            Sign In\n          </Button>\n\n          <Button\n            fullWidth\n            variant=\"contained\"\n            // style={{color : 'red'}}\n            className={classes.submit}\n            onClick = {(event) => {putBloodRequest(event)}}\n          >\n            Urgent Blood Request\n          </Button>\n\n        <TextField fullWidth\n           value={requestMessage}></TextField>\n\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"passwordReset\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"signUp\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default SignIn;","import React, { useContext, useState } from \"react\";\n//import { Link } from \"@reach/router\";\nimport { auth, signInWithGoogle, generateUserDocument,storage } from \"../firebase\";\n//import Select from 'react-select';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from 'react-places-autocomplete';\n//https://www.digitalocean.com/community/tutorials/how-to-integrate-the-google-maps-api-into-react-applications\n//https://towardsdatascience.com/facial-recognition-login-system-using-deep-learning-reactjs-61bff981eb74\n//https://www.youtube.com/watch?v=HjToX1WWE3w - grid layout\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link'\nimport MuiPhoneNumber from \"material-ui-phone-number\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\n\nconst SignUp = () => {\n\n  \n\n  const classes = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\n  const GreenCheckbox = withStyles({\n    root: {\n      color: green[400],\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [contact, setContact]=useState(\"\");\n  const [address, setAddress]=useState(\"\");\n  const [bloodGroup, setBloodGroup]=useState(\"\");\n  const [coordinates, setCoordinates] = useState({\n    lat: null,\n    lng: null\n  });\n  const [isUser,setUserChecked] = useState(true);\n  const [isHospital,setHospitalChecked] = useState(false);\n  const [isBloodBank,setBloodBankChecked] = useState(false);\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [errors,setErrors]=useState(\"\")\n\n\n  const [bloodGroupQuan, setbloodGroupQuan] = useState([\n    { itemName: 'A+', quantity: 0 },\n    { itemName: 'A-', quantity: 0 },\n    { itemName: 'B+', quantity: 0 },\n    { itemName: 'B-', quantity: 0 },\n    { itemName: 'O+', quantity: 0 },\n    { itemName: 'O-', quantity: 0 },\n    { itemName: 'AB+', quantity: 0 },\n    { itemName: 'AB-', quantity: 0 }\n  ]);\n  \n\n\n\n\n  const createUserWithEmailAndPasswordHandler = async (event, email, password) => {\n    event.preventDefault();\n    try{\n      const {user} = await auth.createUserWithEmailAndPassword(email, password);\n      var userType = isUser?\"USER\":isBloodBank?\"BLOOD BANK\":\"HOSPITAL\"\n      if(isUser)\n      {\n        //console.log(firstName,lastName, displayName, contact,address,coordinates,bloodGroup,userType)\n        generateUserDocument(user, {firstName,lastName, displayName, contact,address,coordinates,bloodGroup,userType });\n      }else if(isBloodBank){\n        generateUserDocument(user, {displayName, contact,address,coordinates,bloodGroupQuan,userType });\n      }else{\n        generateUserDocument(user, {displayName, contact,address,coordinates,bloodGroupQuan,userType });\n      }\n    }\n    catch(error){\n      setError('Error Signing up with email and password');\n    }\n      \n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n    setContact(\"\");\n    setAddress(\"\");\n    setBloodGroup(\"\");\n    setCoordinates({lat: null,lng: null});\n  };\n\n \n  // const handleQuantityIncrease = (index) => {\n  //   const newItems = [...bloodGroupQuan];\n  \n  //   bloodGroupQuan[index].quantity++;\n  \n  //   setbloodGroupQuan(newItems);\n  // };\n\n  // const handleQuantityDecrease = (index) => {\n  //   const newItems = [...bloodGroupQuan];\n  //   bloodGroupQuan[index].quantity--\n  //   setbloodGroupQuan(newItems);\n  // };\n\n  const imageHandleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const imageHandleUpload = () => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(progress);\n      },\n      error => {\n        console.log(error);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then(url => {\n            setUrl(url);\n          });\n      }\n    );\n  };\n\n  const bloodGroupHandleChange = (event) => {\n    setBloodGroup(event.target.value);\n  };\n\n  const handleQuantityInput = (index,event) => {\n      const newItems = [...bloodGroupQuan];\n      bloodGroupQuan[index].quantity= event.currentTarget.value;\n      setbloodGroupQuan(newItems);\n  };\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n    if (name === \"userEmail\") {\n      setErrors({userEmail:\"\"})\n      setEmail(value);\n      const emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      console.log(emailPattern.test(value))\n      if (!emailPattern.test(value)) {\n        setErrors({userEmail:\"Email is not valid\"})\n      }\n    } \n    else if (name === \"userPassword\") {\n      setErrors({userPassword:\"\"})\n      setPassword(value);\n      if(value.length<1){\n        setErrors({userPassword:\"password should not be null\"})\n      }\n    }\n    else if (name === \"displayName\") {\n      setErrors({displayName:\"\"})\n      setDisplayName(value);\n      if(value.length<5){\n        setErrors({displayName:\"DisplayName should be atleast 5 chars\"})\n      }\n    }\n    else if (name === \"userContact\") {\n      setErrors({userContact:\"\"})\n      setContact(value);\n      if(value.length!==10){\n        setErrors({userContact:\"Phone number should be 10 digits\"})\n      }\n    }\n    else if(name ===\"isUser\"){\n      setUserChecked(!isUser)\n      setHospitalChecked(false)\n      setBloodBankChecked(false)\n    }\n    else if(name ===\"isHospital\"){\n      setHospitalChecked(!isHospital)\n      setBloodBankChecked(false)\n      setUserChecked(false)\n    }\n    else if(name ===\"isBloodBank\"){\n      setBloodBankChecked(!isBloodBank)\n      setHospitalChecked(false)\n      setUserChecked(false)\n    }\n    else if(name ===\"firstName\"){\n      setErrors({firstName:\"\"})\n      setFirstName(value);\n      if(value.length<5){\n        setErrors({firstName:\"length should be atleast 5\"})\n      }\n    }\n    else if(name === \"lastName\"){\n      setErrors({lastName:\"\"})\n      setLastName(value);\n      if(value.length<5){\n        setErrors({lastName:\"length should be atleast 5\"})\n      }\n    }\n    \n  };\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n \n  };\n\n  // const handleChange = bloodGroup => {\n  //   setBloodGroup(bloodGroup);\n \n  // };\n\n  return (\n        <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\" >\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n\n            <Grid container spacing={3} >\n              \n                          {/* checkboxes */}\n            \n            <FormGroup row style={{ paddingLeft: 60 }}>\n            <FormControlLabel\n              control={<Checkbox checked={isBloodBank} onChange={event => onChangeHandler(event)}  name=\"isBloodBank\" />}\n              label=\"Blood Bank\"\n            />\n            <FormControlLabel\n              control={ <Checkbox checked={isHospital} onChange={event => onChangeHandler(event)}  name=\"isHospital\" color=\"primary\"/>}\n              label=\"Hospital\"\n            />\n            <FormControlLabel\n              control={<GreenCheckbox checked={isUser} onChange={event => onChangeHandler(event)}  name=\"isUser\" />}\n              label=\"User\"\n            />\n            </FormGroup>\n            \n            \n          {/* checkboxes */}\n              { isUser && (\n              <Grid container spacing={3} >\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  value={firstName}\n                  error={errors.firstName}\n                  helperText={errors.firstName}\n                  onChange={event => onChangeHandler(event)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} >\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  value={lastName}\n                  error={errors.lastName}\n                  helperText={errors.lastName}\n                  onChange={event => onChangeHandler(event)}\n                />\n              </Grid> </Grid>)}\n\n              {(isBloodBank|| isHospital||isUser) && (\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  required\n                  id=\"outlined\"\n                  required\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  name=\"displayName\"\n                  value={displayName}\n                  error={errors.displayName}\n                  helperText={errors.displayName}\n                  onChange={event => onChangeHandler(event)}\n              />\n              </Grid> )}\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"userEmail\"\n                  autoComplete=\"email\"\n                  value={email}\n                  error={errors.userEmail}\n                  helperText={errors.userEmail}\n                  onChange={event => onChangeHandler(event)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"userPassword\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  error={errors.userPassword}\n                  helperText={errors.userPassword}\n                  onChange={event => onChangeHandler(event)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n              <MuiPhoneNumber variant=\"outlined\" fullWidth required label=\"Contact Number\" defaultCountry={'us'} value={contact} name=\"userContact\"\n                                error={errors.userContact}\n                                helperText={errors.userContact} onChange={setContact}/>\n              </Grid>\n              \n              { isUser && (\n              <Grid item xs={12}>\n                <FormControl variant=\"outlined\" required fullWidth>\n                <InputLabel>Blood Group</InputLabel>\n                <Select\n                  name=\"userBloodGroup\"\n                  value={bloodGroup}\n                  onChange={bloodGroupHandleChange}\n                  label=\"Blood Group\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value={'A+'}>A+</MenuItem>\n                  <MenuItem value={'A-'}>A-</MenuItem>\n                  <MenuItem value={'B+'}>B+</MenuItem>\n                  <MenuItem value={'B-'}>B-</MenuItem>\n                  <MenuItem value={'O+'}>O+</MenuItem>\n                  <MenuItem value={'O-'}>O-</MenuItem>\n                  <MenuItem value={'AB+'}>AB+</MenuItem>\n                  <MenuItem value={'AB-'}>AB-</MenuItem>\n                </Select>\n              </FormControl>\n              {/* <FormControl variant=\"outlined\" required fullWidth>\n              <InputLabel >Blood Group</InputLabel>\n              <Select id=\"userBloodGroup\" value={bloodGroup}  onChange={event => onChangeHandler(event)} name=\"userBloodGroup\">\n                  {bloodGroupOptions.map(item => (\n                  <option\n                      key={item.value}\n                      value={item.value}>\n                      {item.label}\n                    </option>\n                  ))}\n                </Select>\n              </FormControl> */}\n              </Grid>)}\n\n          <Grid item xs={12}>\n            <PlacesAutocomplete\n          value={address}\n          onChange={setAddress}\n          onSelect={handleSelect}>\n\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div>\n                      <TextField variant=\"outlined\" required fullWidth label=\"Type address\"  {...getInputProps({ })} />\n                      {/* <input {...getInputProps({ placeholder: \"Type address\" })} /> */}\n\n                      <div>\n                        {loading ? <div>...loading</div> : null}\n\n                        {suggestions.map(suggestion => {\n                          const style = {\n                            backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n                          };\n\n                          return (\n                            <div {...getSuggestionItemProps(suggestion, { style })}>\n                              {suggestion.description}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  )}\n\n                </PlacesAutocomplete>\n                  </Grid>\n\n                    { (isBloodBank ||isHospital) && (\n                          <Grid container spacing={1}  > \n                          \n                          {bloodGroupQuan.map((item, index) => (\n                            <div>\n                              <div>\n                                  <span >{item.itemName}</span>\n                              </div>\n                              <div>\n                              <TextField\n                                type=\"number\"\n                                required\n                                fullWidth\n                                size=\"small\"\n                                style={{display: \"flex\", width: \"95%\"}}\n                                inputProps={{ min: 0 }}\n                                variant=\"outlined\"\n                                name=\"bloodGroupQuan\"\n                                value={item.quantity}\n                                onChange={(event) => handleQuantityInput(index,event)}\n                              />\n                            </div>\n                              {/* <div className='quantity'>\n                                <input type=\"number\" name=\"bloodGroupQuan\" value={item.quantity} placeholder=\"Quantity\" min=\"0\" onChange={(event) => handleQuantityInput(index,event)}/>  \n                              </div> */}\n                            </div>\n                          ))}\n                        </Grid>\n                        )}\n          \n            \n            \n            </Grid>\n            <Grid>\n            <progress value={progress} max=\"100\" />\n            <TextField type=\"file\" onChange={imageHandleChange} />\n            <Button onClick={imageHandleUpload}>Upload</Button>\n            </Grid>\n\n            <Box m={2} pt={2}>\n            <Button \n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={event => {\n                createUserWithEmailAndPasswordHandler(event, email, password);\n              }}\n            >\n              Sign Up\n            </Button>\n            </Box>\n\n\n            {/* <Button\n            onClick={() => {\n              try {\n                signInWithGoogle();\n              } catch (error) {\n                console.error(\"Error signing in with Google\", error);\n              } }} >\n          Sign In with Google\n        </Button> */}\n\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          \n          </form>\n        </div>\n      </Container>\n  );\n};\n\nexport default SignUp;","import React, {useState} from \"react\";\nimport { Button, Grid, Typography, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Geolocation from 'react-native-geolocation-service';\n\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: '20px'\n  },\n});\n\n\nfunction Emergency() {\n\n  const classes = useStyles()\n  const [notification, setNotification] = useState('Time to be a hero');\n  const [progress, setProgress] = useState(false)\n\n  const putBloodRequest = (event)=>{\n    setProgress(true)\n    Geolocation.getCurrentPosition(\n      (position) => {\n        const body = {\n          anonymous: true,\n          face_signature: null,\n          victim_id: null,\n          timestamp: new Date().getTime(),\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n        fetch('https://us-central1-bloodbankasaservice.cloudfunctions.net/get_user_by_request',{\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n        }).then(response =>{\n          return response.text();\n        }).then(data =>{\n          setProgress(false)\n          setNotification(data)\n        }).catch(error => {\n          setProgress(false)\n          console.log(error)\n        });\n\n      },  \n      (error) => {\n        setProgress(false)\n        setNotification('Network Error. Try Again!')\n        console.log(error.code, error.message);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 100000\n      }\n    );\n  }\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{ minHeight: '100vh' }}>\n        <Button variant=\"contained\" className={classes.root} size=\"large\" color=\"secondary\" onClick = {(event) => {putBloodRequest(event)}}>\n          Emergency!\n        </Button>\n        {\n          progress ? <CircularProgress size={30} />: <Typography  gutterBottom>{notification}</Typography>\n        }\n    </Grid>\n    \n  );\n}\n\nexport default Emergency;\n","import React, {useState, useEffect}  from 'react';\nimport { GoogleMap, useJsApiLoader, Marker,InfoWindow } from '@react-google-maps/api';\nimport { Button, Grid, Paper, Typography, CircularProgress } from '@material-ui/core';\n\n\nconst gridStyles =  {paper: { height:'90vh' }}\n\n\nconst containerStyle = {\n    width: '100%',\n    height: '100%'\n  };\n  \n  const center = {\n    lat: 33.4092,\n    lng: -111.9203\n  };\n\nconst Notified = (props) => {\n\n    const [locations, setLocations] = useState([]);\n    const [haveData, setHaveData] = useState(false);\n\n    let user_id = props.user_id\n    let request_id = props.request_id\n    useEffect(() => {\n        const body = {\n            user_id: user_id,\n            request_id: request_id\n        }\n        fetch('https://us-central1-bloodbankasaservice.cloudfunctions.net/get_blood_request',{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body)\n        }).then(response =>{\n            return response.json();\n        }).then(data =>{\n            console.log(data)\n            setLocations([\n                {\n                    name: 'Donor',\n                    location: { \n                        lat: parseFloat(data.donar.coordinates.latitude),\n                        lng: parseFloat(data.donar.coordinates.longitude)\n                    }\n                },\n                {\n                    name: 'Receiver',\n                    location: { \n                        lat: parseFloat(data.receiver.coordinates.latitude),\n                        lng: parseFloat(data.receiver.coordinates.longitude)\n                    }\n                }\n            ])\n            setHaveData(true)\n        }).catch(error => {\n            console.log(error)\n        });\n    }, [user_id, request_id])\n\n    const acceptRequest = (event, accepted) => {\n        fetch('https://us-central1-bloodbankasaservice.cloudfunctions.net/get_request_acceptance',{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({accepted: accepted, user_id: user_id, request_id: request_id})\n        }).then(response =>{\n            return response.json();\n        }).then(data =>{\n\n        }).catch(error => {\n            console.log(error)\n        });\n    }\n    \n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyCSngnFVuMXGnhdO2ZBsN7kYk_o7L9PVys\"\n    })\n\n//   return  isLoaded? \n  return (haveData ? <div>\n                <Grid container justify=\"center\" alignItems=\"center\"style={{ minHeight: '10vh' }}>\n                    <Button variant=\"contained\" style={{marginRight:\"5px\"}} size=\"large\" color=\"primary\" onClick = {(event) => {acceptRequest(event, true)}}>\n                        Accept Request\n                    </Button>\n                    <Button variant=\"contained\" style={{marginLeft:\"5px\"}} size=\"large\" color=\"secondary\" onClick = {(event) => {acceptRequest(event, false)}}>\n                        Reject Request\n                    </Button>\n                </Grid>\n                <Grid container>\n                    <Grid item sm >\n                        <Paper style={gridStyles.paper}>\n                            <GoogleMap\n                                mapContainerStyle={containerStyle}\n                                zoom={8}\n                                center={center}>\n                                {\n                                    locations.map(item => <Marker key={item.name} position={item.location} />)\n                                }\n                                </GoogleMap>\n                        </Paper>\n                    </Grid>\n                </Grid>\n        </div>: <></>) \n        \n}\nexport default Notified;","import React, { useState, useContext } from \"react\";\nimport { auth } from \"../firebase\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { Link } from \"@reach/router\";\n\nconst PasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [emailHasBeenSent, setEmailHasBeenSent] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    }\n  };\n\n  const sendResetEmail = event => {\n    event.preventDefault();\n    auth\n      .sendPasswordResetEmail(email)\n      .then(() => {\n          setEmailHasBeenSent(true);\n        setTimeout(() => {setEmailHasBeenSent(false)}, 3000);\n      })\n      .catch(() => {\n        setError(\"Error resetting password\");\n      });\n  };\n  return (\n    <div className=\"mt-8\">\n      <h1 className=\"text-xl text-center font-bold mb-3\">\n        Reset your Password\n      </h1>\n      <div className=\"border border-blue-300 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\n        <form action=\"\">\n          {emailHasBeenSent && (\n            <div className=\"py-3 bg-green-400 w-full text-white text-center mb-3\">\n              An email has been sent to you!\n            </div>\n          )}\n          {error !== null && (\n            <div className=\"py-3 bg-red-600 w-full text-white text-center mb-3\">\n              {error}\n            </div>\n          )}\n          <label htmlFor=\"userEmail\" className=\"w-full block\">\n            Email:\n          </label>\n          <input\n            type=\"email\"\n            name=\"userEmail\"\n            id=\"userEmail\"\n            value={email}\n            placeholder=\"Input your email\"\n            onChange={onChangeHandler}\n            className=\"mb-3 w-full px-1 py-2\"\n          />\n          <button\n            className=\"w-full bg-blue-400 text-white py-3\"\n            onClick={event => {\n              sendResetEmail(event);\n            }}\n          >\n            Send me a reset link\n          </button>\n        </form>\n\n        <Link\n          to=\"/\"\n          className=\"my-2 text-blue-700 hover:text-blue-800 text-center block\"\n        >\n          &larr; back to sign in page\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PasswordReset;","import React, { useContext } from \"react\";\nimport { Router } from \"@reach/router\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport Emergency from './Emergency';\nimport Notified from './Notified';\nimport UserProvider from \"../providers/UserProvider\";\nimport ProfilePage from \"./ProfilePage\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport PasswordReset from \"./PasswordReset\";\nfunction Application() {\n  const user = useContext(UserContext);\n  return (\n      //   user ?\n      //   <ProfilePage />\n      // :\n        <Router>\n          <SignUp path=\"signUp\" />\n          <SignIn path=\"/\" />\n          <Emergency path='/emergency'/>\n          <Notified path=\"/notified/:user_id/:request_id\"/>\n          <PasswordReset path = \"passwordReset\" />\n        </Router>\n\n      \n      \n  );\n}\n\nexport default Application;","// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useContext } from \"react\";\nimport { Router } from \"@reach/router\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport Application from \"./components/Application\";\nimport UserProvider from \"./providers/UserProvider\";\nimport ProfilePage from \"./components/ProfilePage\";\nimport { UserContext } from \"./providers/UserProvider\";\nfunction App() {\n  \n  return (\n    <UserProvider>\n      <Application />\n    </UserProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}